{"version":3,"sources":["StartDateText.js","TimeDifference.js","Milestones.js","App.js","index.js"],"names":["StartDateText","props","date","startDate","d","getDate","m","getMonth","y","getFullYear","hour","getHours","min","getMinutes","ampm","time","className","TimeDifference","useState","setTimer","setInterval","today","Date","diff","Math","floor","getTime","secs","mins","hours","days","months","years","Milestones","milestones","map","index","message","round","daysToGo","futureDate","daysLeft","setDate","addDays","daysToGoMessage","toLocaleString","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06be45d0.chunk.js","sourcesContent":["import React from 'react'\n\nconst StartDateText = (props) => {\n    const date = props.startDate;\n\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const d = date.getDate();\n    const m = months[date.getMonth()]\n    const y = date.getFullYear();\n    let hour = date.getHours();\n    let min = date.getMinutes();\n\n    const ampm = hour >= 12 ? 'am' : 'pm';\n    const time = `${hour}:${min} ${ampm}`\n\n    \n    return (\n        <h2 className=\"formatTime\">{d} {m} {y} - {time}</h2>\n    )\n}\n\nexport default StartDateText\n","import React, { useState } from \"react\";\n\nconst TimeDifference = (props) => {\n  const [time, setTimer] = useState(\"\");\n  // Probably not the best way to refresh the component. It works for now.\n  setInterval(() => setTimer(time + 1), 1000);\n\n  const startDate = props.startDate;\n  const today = new Date();\n\n  let diff = Math.floor(today.getTime() - startDate.getTime());\n  let secs = Math.floor(diff / 1000);\n  let mins = Math.floor(secs / 60);\n  let hours = Math.floor(mins / 60);\n  let days = Math.floor(hours / 24);\n  let months = Math.floor(days / 31);\n  let years = Math.floor(months / 12);\n\n  months = Math.floor(months % 12);\n  days = Math.floor(days % 31);\n  hours = Math.floor(hours % 24);\n  mins = Math.floor(mins % 60);\n  secs = Math.floor(secs % 60);\n\n  return (\n    <div className=\"timer\">\n      {days >= 0 && (\n        <>\n          <h3>{days} Days</h3>\n          {(months > 0 || years > 0) && <h3>{months} Months</h3>}\n          {years > 0 && <h3>{years} Years</h3>}\n        </>\n      )}\n      <h3>{hours} Hours</h3>\n      <h3>{mins} Mins</h3>\n      <h3>{secs} Secs</h3>\n    </div>\n  );\n};\n\nexport default TimeDifference;\n","import React from \"react\";\n\nconst Milestones = (props) => {\n  const startDate = props.startDate;\n  const milestones = props.milestones;\n\n  // Work out the future date e.g add days to todays date\n  const addDays = (days) => {\n    let date = new Date(startDate);\n    date.setDate(date.getDate() + days);\n    return date;\n  };\n\n  // Work out days left from future date\n  const daysLeft = (futureDate) => {\n    let today = new Date();\n    let date = new Date(startDate);\n    const oneDay = 24 * 60 * 60 * 1000;\n    const diff = Math.round((futureDate - today) / oneDay);\n    \n    return diff;\n  };\n\n  return (\n    <div className=\"milestones\">\n      {milestones.map((days, index) => {\n        let message;\n        // Greater than 1 year\n        if (days / 364 > 1) {\n          message = `${Math.round(days / 365)} Years`;\n        // If week is greater than 1 and 52 weeks.\n        } else if (days / 7 > 1 && days / 6 < 52) {\n          message = `${Math.round(days / 7)} Weeks`;\n          // It's short enough to show days!\n        } else {\n          message = `${days} Days`;\n        }\n        const futureDate = addDays(days);\n        const daysToGo = daysLeft(futureDate);\n        const daysToGoMessage = daysToGo < 0 ? `‚úÖ`  : `${daysToGo.toLocaleString('en-GB')} Days Left`;\n        return <h4 key={index}>{message} - {daysToGoMessage} </h4>\n      })}\n    </div>\n  );\n};\n\nexport default Milestones;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport StartDateText from \"./StartDateText\"\nimport TimeDifference from \"./TimeDifference\";\nimport Milestones from \"./Milestones\";\n\nfunction App() {\n  const [startDate, setStartDate] = useState(new Date(\"2021-02-19T02:12:00+00:00\"));\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <div>\n          <h2>Stem Cell Day ‚ú®</h2>\n          <StartDateText startDate={startDate} />\n          <h2 className=\"butterfly\">ü¶ã</h2>\n          <TimeDifference startDate={startDate} />\n          <h3>Milestones ‚è≥</h3>\n          <Milestones startDate={startDate} milestones={[7, 14, 30, 50, 100, 182, 365, 730, 1095, 1460, 1825]}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}