{"version":3,"sources":["StartDateText.js","TimeDifference.js","Milestones.js","App.js","index.js"],"names":["StartDateText","props","date","startDate","d","getDate","m","getMonth","y","getFullYear","hour","getHours","min","getMinutes","ampm","time","className","TimeDifference","useState","setTimer","useEffect","timer","setInterval","clearTimeout","getTime","today","Date","diff","Math","floor","secs","mins","hours","days","months","years","totalDaysElapsed","round","abs","Milestones","milestones","map","index","message","daysToGo","futureDate","daysLeft","setDate","addDays","daysToGoMessage","toLocaleString","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee5089c.chunk.js","sourcesContent":["import React from 'react'\n\nconst StartDateText = (props) => {\n    const date = props.startDate;\n\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const d = date.getDate();\n    const m = months[date.getMonth()]\n    const y = date.getFullYear();\n    let hour = date.getHours();\n    let min = date.getMinutes();\n\n    const ampm = hour >= 12 ? 'am' : 'pm';\n    const time = `${hour}:${min} ${ampm}`\n\n    \n    return (\n        <h2 className=\"formatTime\">{d} {m} {y} - {time}</h2>\n    )\n}\n\nexport default StartDateText\n","import React, { useState, useEffect } from \"react\";\n\nconst TimeDifference = (props) => {\n  const [time, setTimer] = useState(\"\");\n\n  useEffect(() => {\n    const timer = setInterval(() => setTimer(time + 1), 1000);\n    return () => clearTimeout(timer);\n  });\n\n  const startDate = props.startDate.getTime();\n  const today = new Date();\n\n  const oneDay = 24 * 60 * 60 * 1000; // 24 hours one day\n\n  let diff = Math.floor(today.getTime() - startDate);\n  let secs = Math.floor(diff / 1000);\n  let mins = Math.floor(secs / 60);\n  let hours = Math.floor(mins / 60);\n  let days = Math.floor(hours / 24);\n  let months = Math.floor(days / 31);\n  let years = Math.floor(months / 12);\n\n  months = Math.floor(months % 12);\n  days = Math.floor(days % 31);\n  hours = Math.floor(hours % 24);\n  mins = Math.floor(mins % 60);\n  secs = Math.floor(secs % 60);\n\n  let totalDaysElapsed = Math.round(\n    Math.abs((today.getTime() - startDate) / oneDay)\n  );\n\n  return (\n    <>\n      <div className=\"totalDays\">\n        <h2>{totalDaysElapsed} Days</h2>\n      </div>\n      \n      <div>\n        <h3>Time Elapsed üïê</h3>\n        {days >= 0 && (\n          <>\n            {years > 0 && <h3>{years} Years</h3>}\n            {(months > 0 || years > 0) && <h3>{months} Months</h3>}\n            <h3>{days} Days</h3>\n          </>\n        )}\n        <h3>{hours} Hours</h3>\n        <h3>{mins} Mins</h3>\n        <h3>{secs} Secs</h3>\n      </div>\n    </>\n  );\n};\n\nexport default TimeDifference;\n","import React from \"react\";\n\nconst Milestones = (props) => {\n  const startDate = props.startDate;\n  const milestones = props.milestones;\n\n  // Work out the future date e.g add days to todays date\n  const addDays = (days) => {\n    let date = new Date(startDate);\n    date.setDate(date.getDate() + days);\n    return date;\n  };\n\n  // Work out days left from future date\n  const daysLeft = (futureDate) => {\n    let today = new Date();\n    const oneDay = 24 * 60 * 60 * 1000;\n    const diff = Math.round((futureDate - today) / oneDay);\n    return diff;\n  };\n\n  return (\n    <div className=\"milestones\">\n      {milestones.map((days, index) => {\n        let message;\n        // Greater than 1 year\n        if (days / 364 > 1) {\n          message = `${Math.round(days / 365)} Years`;\n        // If week is greater than 1 and 52 weeks.\n        } else if (days / 7 > 1 && days / 6 < 52) {\n          message = `${Math.round(days / 7)} Weeks (${days} days)`;\n          // It's short enough to show days!\n        } else {\n          message = `${days} Days`;\n        }\n        const futureDate = addDays(days);\n        const daysToGo = daysLeft(futureDate);\n        const daysToGoMessage = daysToGo < 1 ? `‚úÖ`  : `${daysToGo.toLocaleString('en-GB')} Days Left`;\n        return <h4 key={index}>{message} - {daysToGoMessage} </h4>\n      })}\n    </div>\n  );\n};\n\nexport default Milestones;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport StartDateText from \"./StartDateText\"\nimport TimeDifference from \"./TimeDifference\";\nimport Milestones from \"./Milestones\";\n\nfunction App() {\n  // const [startDate, setStartDate] = useState(new Date(\"2021-02-19T02:12:00+00:00\"));\n  const startDate = new Date(\"2021-02-19T02:12:00+00:00\");\n  \n  return (\n    <div>\n      <header className=\"App-header\">\n        <div>\n          <h2>Stem Cell Day ‚ú®</h2>\n          <StartDateText startDate={startDate} />\n          <h2 className=\"butterfly\">ü¶ã</h2>\n          <TimeDifference startDate={startDate} />\n          <h3>Milestones ‚è≥</h3>\n          <Milestones startDate={startDate} milestones={[7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 100, 150, 200, 365, 730, 1095, 1460, 1825]}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}